#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e # fail fast

# parse params
BUILD_DIR=/app
CACHE_DIR=$2

BUILDPACK_NAME=pango

# use pigz if available for (potentially) faster decompression
type pigz > /dev/null 2>&1 && alias tar='tar --use-compress-program=pigz'

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function vendor() {
  binary="$1"
  path="$2"

  echo "Fetching $binary" | indent
  mkdir -p $path
  curl $binary -s -o - | tar xz -C $path -f -

  if [ -d "$path/bin" ]; then
    export PATH=$path/bin:$PATH
  fi

  if [ -d "$path/lib/pkgconfig" ]; then
    echo "Found $path/lib/pkgconfig"
    # pkg-config should handle compiler options (if used)
    export PKG_CONFIG_PATH="$path/lib/pkgconfig:$PKG_CONFIG_PATH"
    echo $PKG_CONFIG_PATH
  fi

  # standard paths
  export CPPPATH="$path/include:$CPPPATH"
  export CPATH="$path/include:$CPATH"
  export LIBRARY_PATH="$path/lib:$LIBRARY_PATH"

  export LD_LIBRARY_PATH="$path/lib:$LD_LIBRARY_PATH"
}

echo "-----> Vendoring binaries"
vendor "https://s3.amazonaws.com/mojodna-heroku/cairo-1.12.16-1.tar.gz"  "$BUILD_DIR/vendor/cairo"
vendor "https://s3.amazonaws.com/mojodna-heroku/freetype-2.5.0-1.tar.gz" "$BUILD_DIR/vendor/freetype"
vendor "http://archive.ubuntu.com/ubuntu/pool/main/g/gdk-pixbuf/gdk-pixbuf_2.30.7.orig.tar.xz"  "$BUILD_DIR/vendor/gdk-pixbuf"
vendor "http://http.debian.net/debian/pool/main/p/pixman/pixman_0.33.6.orig.tar.gz"  "$BUILD_DIR/vendor/pixman-1"
vendor "http://mirror.ryansanden.com/xfce-4.8/cairo-1.12.0.tar.gz"  "$BUILD_DIR/vendor/pango"

echo "-----> Configuring build environment"

cat <<EOF > export
export PATH="$PATH:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$LIBRARY_PATH:$LIBRARY_PATH"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:$PKG_CONFIG_PATH"
export CPPPATH="\$CPPPATH:$CPPPATH"
export CPATH="\$CPATH:$CPATH"
EOF

echo "-----> Building runtime environment"
mkdir -p $BUILD_DIR/.profile.d

cat <<EOF > $BUILD_DIR/.profile.d/$BUILDPACK_NAME.sh
export PATH="${PATH//$BUILD_DIR//app}:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:${LD_LIBRARY_PATH//$BUILD_DIR//app}"
export LIBRARY_PATH="\$LIBRARY_PATH:${LIBRARY_PATH//$BUILD_DIR//app}"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:${PKG_CONFIG_PATH//$BUILD_DIR//app}"
export CPPPATH="\$CPPPATH:${CPPPATH//$BUILD_DIR//app}"
export CPATH="\$CPATH:${CPATH//$BUILD_DIR//app}"
EOF

echo "-----> Prove it worked"
echo `pkg-config --static --libs glib-2.0 gdk-pixbuf-2.0 cairo pango`
echo `pkg-config --cflags glib-2.0 gdk-pixbuf-2.0 cairo pango`
echo $PATH
echo $LD_LIBRARY_PATH
echo $LIBRARY_PATH
echo $PKG_CONFIG_PATH
echo $CPPPATH
echo $CPATH
