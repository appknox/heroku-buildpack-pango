#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e # fail fast

# parse params
BUILD_DIR=$1
CACHE_DIR=$2

BUILDPACK_NAME=pangopp

# use pigz if available for (potentially) faster decompression
type pigz > /dev/null 2>&1 && alias tar='tar --use-compress-program=pigz'

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function vendor() {
  binary="$1"
  path="$2"

  echo "Fetching $binary" | indent
  mkdir -p $path
  curl $binary -s -o - | tar xz -C $path -f -

  if [ -d "$path/bin" ]; then
    PATH="$path/bin${PATH:+:$PATH}"
  fi

  if [ -d "$path/lib/pkgconfig" ]; then
    # pkg-config should handle compiler options (if used)
    PKG_CONFIG_PATH="$path/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}"
  fi

  # standard paths
  CPPPATH="$path/include${CPPPATH:+:$CPPPATH}"
  CPATH="$path/include${CPATH:+:$CPATH}"
  LIBRARY_PATH="$path/lib${LIBRARY_PATH:+:$LIBRARY_PATH}"
  LD_LIBRARY_PATH="$path/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
}

echo "-----> Vendoring binaries"
vendor "http://cl.ly/123r033J2m0c/cairo-1.12.16-1.tar.gz"  "$BUILD_DIR/vendor/cairo"
vendor "http://cl.ly/3K081d3W003u/gdk-pixbuf-2.10.0-1.tar.gz"  "$BUILD_DIR/vendor/gdk-pixbuf"
vendor "http://cl.ly/3l152x3s1l0e/pixman-0.30.2-1.tar.gz"  "$BUILD_DIR/vendor/pixman"
vendor "http://cl.ly/0o1d0W3g1E0S/pango-1.3.6-1.tar.gz"  "$BUILD_DIR/vendor/pango"

echo "-----> Configuring build environment"
cat <<EOF > export
export PATH="$PATH"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH"
export LIBRARY_PATH="$LIBRARY_PATH"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH"
export CPPPATH="$CPPPATH"
export CPATH="$CPATH"
EOF

echo "-----> Verifying build enviornment"
source export
pkg-config --static --libs glib-2.0 gdk-pixbuf-2.0 cairo pango > /dev/null
pkg-config --cflags glib-2.0 gdk-pixbuf-2.0 cairo pango > /dev/null

echo "-----> Building runtime environment"
mkdir -p $BUILD_DIR/.profile.d

cat <<EOF > $BUILD_DIR/.profile.d/$BUILDPACK_NAME.sh
export PATH="${PATH//$BUILD_DIR//app}:\$PATH"
export LD_LIBRARY_PATH="\$LD_LIBRARY_PATH:${LD_LIBRARY_PATH//$BUILD_DIR//app}"
export LIBRARY_PATH="\$LIBRARY_PATH:${LIBRARY_PATH//$BUILD_DIR//app}"
export PKG_CONFIG_PATH="\$PKG_CONFIG_PATH:${PKG_CONFIG_PATH//$BUILD_DIR//app}"
export CPPPATH="\$CPPPATH:${CPPPATH//$BUILD_DIR//app}"
export CPATH="\$CPATH:${CPATH//$BUILD_DIR//app}"
EOF
